{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Incode Group API docs",
    "description": "**API documentation for test task server app.**"
  },
  "servers": [
    {
      "url": "https://teck-task-server.onrender.com",
      "description": "Production"
    },
    { "url": "http://localhost:3000", "description": "Development" }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing fields)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/users/": {
      "get": {
        "tags": ["API users"],
        "summary": "Get all users",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },

    "api/subordinate/:id": {
      "patch": {
        "tags": ["API users"],
        "summary": "Assign a user to a boss",
        "description": "Assign a user to a boss, id in this case is the id of the user who will be assigned to the boss, the boss data is taken from the token. ",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user (ReqUser)",
            "schema": {
              "type": "string"
            },
            "example": "652aba7544cbefff726fbd50"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubordinateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },

    "api/change-boss/:id": {
      "patch": {
        "tags": ["API users"],
        "summary": "Change the boss for a user",
        "description": "Only a boss can change a user to another boss. In the url id we specify the user to whom we are changing the boss and in the body of the request we specify the new boss.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user (ReqUser)",
            "schema": {
              "type": "string"
            },
            "example": "652aba7544cbefff726fbd50"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newBossId": {
                    "type": "string",
                    "example": "652aba8944cbefff726fbd54"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeBossResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenChange"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Vladyslav"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwert123!"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123!"
          }
        }
      },

      "RegisterResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "652aa9d1027426c55514c040"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@example.com"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Vladyslav"
              },
              "role": {
                "type": "string",
                "description": "User's role",
                "example": "RegUser"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzEwNWI0Yzk3NTI4ZTVkYmY1MDNhZSIsImlhdCI6MTY4NTEzNzEyNiwiZXhwIjoxNjg1MjE5OTI2fQ.yTZiezf2_N8N3SLa2pmI-ZRKXy1J9gg2nH-vGwySbqs"
          }
        }
      },

      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzEwNWI0Yzk3NTI4ZTVkYmY1MDNhZSIsImlhdCI6MTY4NTEzNzEyNiwiZXhwIjoxNjg1MjE5OTI2fQ.yTZiezf2_N8N3SLa2pmI-ZRKXy1J9gg2nH-vGwySbqs"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "64fb0f8b78e6b8d1e6a10c76"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Vladyslav"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@example.com"
              }
            }
          }
        }
      },

      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Missing fields"
          }
        }
      },

      "MissingParams": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "missing query parameters"
          }
        }
      },

      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not authorized"
          }
        }
      },

      "ConflictResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email in use"
          }
        }
      },

      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not found"
          }
        }
      },

      "Forbidden": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "The user already has a boss"
          }
        }
      },

      "ForbiddenChange": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "You can only reassign your subordinates"
          }
        }
      },

      "GetAllResponse": {
        "type": "object",
        "description": "Boss and subordinates response",
        "properties": {
          "boss": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Boss id",
                "example": "652ab9ac44cbefff726fbd40"
              },
              "name": {
                "type": "string",
                "description": "Boss name",
                "example": "Pavlo"
              },
              "email": {
                "type": "string",
                "description": "Boss email",
                "example": "pavlo@gmail.com"
              },
              "role": {
                "type": "string",
                "description": "Boss role",
                "example": "Boss"
              },
              "chief": {
                "type": "string",
                "description": "Boss's chief id",
                "example": "652ab95144cbefff726fbd3c"
              }
            }
          },
          "subordinates": {
            "type": "array",
            "description": "List of subordinates",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User id",
                  "example": "652aba7544cbefff726fbd50"
                },
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Mike"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "mike@gmail.com"
                },
                "role": {
                  "type": "string",
                  "description": "User role",
                  "example": "Boss"
                },
                "subordinates": {
                  "type": "array",
                  "description": "List of subordinates",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "User id",
                        "example": "652abe10595e95c45dc503f6"
                      },
                      "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Frank"
                      },
                      "email": {
                        "type": "string",
                        "description": "User email",
                        "example": "frank@gmail.com"
                      },
                      "role": {
                        "type": "string",
                        "description": "User role",
                        "example": "RegUser"
                      },
                      "subordinates": {
                        "type": "string",
                        "description": "List of subordinates",
                        "example": "[]"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },

      "SubordinateResponse": {
        "type": "object",
        "description": "Boss and subordinates response",
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "example": "Congratulations, you're the boss now! The user Nick is now your subordinate."
          }
        }
      },

      "ChangeBossResponse": {
        "type": "object",
        "description": "Change Boss and subordinates response",
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "example": "You're no longer the boss, you have no subordinates left! The Nick is now John subordinate."
          }
        }
      }
    }
  }
}
